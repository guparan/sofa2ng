#!/usr/bin/env python
# -*- coding: utf-8 -*-
import json, os
from Cheetah.Template import Template
import bootstrap
from constructor import moveCodeAndPatch, patchNamespace, reorderCommands


package_dir = to_root + "/Sofa/Helper/Bvh"
context = {
                   "from_root" : from_root,
                    "src_from" : from_root + "/SofaKernel/framework/sofa/helper/io/bvh",
                "package_name" : "Sofa.Helper.Bvh",
                "package_type" : "library",
                "dependencies" : ["SofaHelper"],
                 "package_dir" : package_dir,
             "package_dir_src" : package_dir + "/src",
          "package_dir_config" : package_dir + "/config",
      "package_dir_deprecated" : package_dir + "/deprecated_layout/sofa/helper/io/bvh",
                  "recipe_dir" : os.path.dirname(__file__),
          "package_components" : ["BVHChannels", "BVHOffset", "BVHJoint", "BVHLoader", "BVHMotion"],
               "old_namespace" : ["sofa", "helper", "io", "bvh"],
               "new_namespace" : ["sofa", "helper", "bvh"],
                "header_files" : [], # will be filled by moveCodeAndPatch
                "source_files" : [], # will be filled by moveCodeAndPatch
}
context["package_dir_src_with_namespace"] = context["package_dir_src"] + "/" + '/'.join(context["new_namespace"])


def fromFileToFile(file, context):
    return (
        context["src_from"] + "/" + file,                    # source
        context["package_dir_src"] + "/" +                   # destination
            '/'.join(context["new_namespace"]) + "/" + file
    )


########### INIT ############
tasks = []
tasks += [["generator", "init", context]]
tasks += [["mkdir", "${package_dir_src_with_namespace}", context]]
tasks += [["mkdir", "${package_dir_deprecated}", context]]
tasks += [["mkdir", "${package_dir_config}", context]]
##########################


######## SOURCES #########
tasks += moveCodeAndPatch(context["package_components"], fromFileToFile, **context) # will set header_files and source_files
tasks += patchNamespace(context["package_dir_src"], **context)
tasks += [["replacetext", context["package_dir_src"], "SOFA_HELPER_API", "SOFA_HELPER_BVH_API", context]]
tasks += [["replacetext", context["package_dir_src"], "include <sofa/helper/helper.h>", "include <Sofa.Helper.Bvh.h>", context]]

tasks += [["generator", "generate-cmakelists", context]]
tasks += [["generator", "generate-deprecatedlayout", context]]
##########################


######### CONFIG #########
tasks += [["generator", "generate-configfiles", context]]
##########################


# command = {"commands" : reorderCommands(tasks)}
command = {"commands" : tasks}



